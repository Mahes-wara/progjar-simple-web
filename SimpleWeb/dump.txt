	// Render final HTML
//	public void renderHTMLElement() {
//
//		Iterator<JLabel> it = messageQueue.iterator();
//		while (it.hasNext()) {
//			JLabel currLabel = it.next();
//			if (currLabel.getText().contains("<a ") || currLabel.getText().contains("<a>")) {
//				currLabel = changeToLink(currLabel);
//			}
//			pane.add(currLabel);
//		}
//	}



public static String getHTMLText(String url) throws IOException {
		String host = url;
		String requestedFile = "progjar-browser/simple-test.php";

		InetAddress address = InetAddress.getByName(host);
		Socket socket = new Socket(address, port);
		StringBuilder body = new StringBuilder();

		try (BufferedWriter out = new BufferedWriter(new OutputStreamWriter(socket.getOutputStream()));
				BufferedReader in = new BufferedReader(new InputStreamReader(socket.getInputStream()))) {
			String message = String.format("GET /%s HTTP/1.1\r\nHost: %s\r\n\r\n", requestedFile, host);
			out.write(message);
			out.flush();

			String line;
			boolean isMsgHead = true;
			boolean isMsgBody = false;
			Queue<JLabel> messageQueue = new LinkedList<>();
			while ((line = in.readLine()) != null) {
				if (isMsgBody) {
					body.append(line);
					body.append("\r\n");
					JLabel curJLabel = new JLabel();
					curJLabel.setText(line);
					messageQueue.add(curJLabel);
				}
				if (!isMsgHead) {
					isMsgBody = true;
				}
				if (line.contains("Content-Type")) {
					isMsgHead = false;
				}
			}
			System.out.println(messageQueue);
		}
		socket.close();
		return body.toString();
	}
	
	public void hyperlinkUpdate(HyperlinkEvent evt) {
		if (evt.getEventType() != HyperlinkEvent.EventType.ACTIVATED) {
			return;
		}
		JEditorPane srcPane = (JEditorPane) evt.getSource();
		String url = evt.getURL().toString();
		addressBar.setText(url);
		try {
			pane.setText(getHTMLText(url));
			;
		} catch (Throwable t) {
			t.printStackTrace();
		}
	}
